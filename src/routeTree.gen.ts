/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as PaymentlinksRouteImport } from './routes/paymentlinks'
import { Route as HomepageRouteImport } from './routes/homepage'
import { Route as DashboardRouteImport } from './routes/dashboard'
import { Route as IndexRouteImport } from './routes/index'
import { Route as PayLinkIdRouteImport } from './routes/pay.$linkId'
import { Route as DemoTanstackQueryRouteImport } from './routes/demo.tanstack-query'

const PaymentlinksRoute = PaymentlinksRouteImport.update({
  id: '/paymentlinks',
  path: '/paymentlinks',
  getParentRoute: () => rootRouteImport,
} as any)
const HomepageRoute = HomepageRouteImport.update({
  id: '/homepage',
  path: '/homepage',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardRoute = DashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const PayLinkIdRoute = PayLinkIdRouteImport.update({
  id: '/pay/$linkId',
  path: '/pay/$linkId',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoTanstackQueryRoute = DemoTanstackQueryRouteImport.update({
  id: '/demo/tanstack-query',
  path: '/demo/tanstack-query',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRoute
  '/homepage': typeof HomepageRoute
  '/paymentlinks': typeof PaymentlinksRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/pay/$linkId': typeof PayLinkIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRoute
  '/homepage': typeof HomepageRoute
  '/paymentlinks': typeof PaymentlinksRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/pay/$linkId': typeof PayLinkIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRoute
  '/homepage': typeof HomepageRoute
  '/paymentlinks': typeof PaymentlinksRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/pay/$linkId': typeof PayLinkIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/homepage'
    | '/paymentlinks'
    | '/demo/tanstack-query'
    | '/pay/$linkId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/dashboard'
    | '/homepage'
    | '/paymentlinks'
    | '/demo/tanstack-query'
    | '/pay/$linkId'
  id:
    | '__root__'
    | '/'
    | '/dashboard'
    | '/homepage'
    | '/paymentlinks'
    | '/demo/tanstack-query'
    | '/pay/$linkId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DashboardRoute: typeof DashboardRoute
  HomepageRoute: typeof HomepageRoute
  PaymentlinksRoute: typeof PaymentlinksRoute
  DemoTanstackQueryRoute: typeof DemoTanstackQueryRoute
  PayLinkIdRoute: typeof PayLinkIdRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/homepage': {
      id: '/homepage'
      path: '/homepage'
      fullPath: '/homepage'
      preLoaderRoute: typeof HomepageRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/paymentlinks': {
      id: '/paymentlinks'
      path: '/paymentlinks'
      fullPath: '/paymentlinks'
      preLoaderRoute: typeof PaymentlinksRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/tanstack-query': {
      id: '/demo/tanstack-query'
      path: '/demo/tanstack-query'
      fullPath: '/demo/tanstack-query'
      preLoaderRoute: typeof DemoTanstackQueryRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/pay/$linkId': {
      id: '/pay/$linkId'
      path: '/pay/$linkId'
      fullPath: '/pay/$linkId'
      preLoaderRoute: typeof PayLinkIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashboardRoute: DashboardRoute,
  HomepageRoute: HomepageRoute,
  PaymentlinksRoute: PaymentlinksRoute,
  DemoTanstackQueryRoute: DemoTanstackQueryRoute,
  PayLinkIdRoute: PayLinkIdRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
